# See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

# Base image for runtime
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Install CUPS and printing utilities
RUN apt-get update && apt-get install -y cups cups-bsd

# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["XmppBot/XmppBot.csproj", "XmppBot/"]
RUN dotnet restore "./XmppBot/XmppBot.csproj"
COPY . .
WORKDIR "/src/XmppBot"
RUN dotnet build "./XmppBot.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Publish stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./XmppBot.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Final stage
FROM base AS final
WORKDIR /app

# Copy published app
COPY --from=publish /app/publish .

# Copy startup script into final image
COPY Startup.sh /usr/local/bin/Startup.sh
RUN chmod +x /usr/local/bin/Startup.sh

# Set entrypoint to run the startup script
ENTRYPOINT ["/usr/local/bin/Startup.sh"]
